matrix:
  include:
    - os: linux
      dist: trusty
      language: python
      python: "2.6"
      env: TYPE="linux" PYVER="2.6"
    - os: linux
      dist: trusty
      language: python
      python: "2.7"
      env: TYPE="linux" PYVER="2.7"
    - os: linux
      dist: trusty
      language: python
      python: "3.3"
      env: TYPE="linux" PYVER="3.3"
    - os: linux
      dist: trusty
      language: python
      python: "3.4"
      env: TYPE="linux" PYVER="3.4"
    - os: linux
      dist: trusty
      language: python
      python: "3.5"
      env: TYPE="linux" PYVER="3.5"
    - os: linux
      dist: trusty
      language: python
      python: "nightly"
      env: TYPE="linux" PYVER="nightly"
    - os: linux
      dist: trusty
      language: python
      python: "pypy"
      env: TYPE="linux" PYVER="pypy"
    - os: linux
      language: generic
      sudo: required
      dist: trusty
      env: TYPE="windows" PYVER="2.7"
    - os: linux
      language: generic
      sudo: required
      dist: trusty
      env: TYPE="windows" PYVER="3.4"
    - os: osx
      language: generic
      env: TYPE="osx" PYVER="??"

install:
  - if [ "$TYPE" == "windows" ]; then sudo dpkg --add-architecture i386; fi
  - if [ "$TYPE" == "windows" ]; then travis_retry sudo apt-get update -q; fi
  - if [ "$TYPE" == "windows" ]; then travis_retry sudo apt-get install --no-install-recommends -y wine xvfb; fi

script:
  - if [ "$TYPE" == "linux" ]; then ./setup.py test; fi
  - if [ "$TYPE" == "osx" ]; then python ./setup.py test; fi
  - if [ "$TYPE" == "windows" ]; then xvfb-run -a ./run_wine.sh "$PYVER" ./setup.py test; fi
